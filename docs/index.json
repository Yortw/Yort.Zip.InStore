{
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Yort.Zip.InStore",
    "keywords": "Add your introductions here!"
  },
  "api/Yort.Zip.InStore.ZipEnvironment.html": {
    "href": "api/Yort.Zip.InStore.ZipEnvironment.html",
    "title": "Class ZipEnvironment | Yort.Zip.InStore",
    "keywords": "Class ZipEnvironment Represents a particular environment for the Zip API (i.e test for NZ merchants, production for AU merchants etc). Inheritance Object ZipEnvironment Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class ZipEnvironment Remarks You can construct instances of this class in order to support future environments that may come online before the library is updated with support, but for convenience use the pre-built instances provided by the static properties on this class, i.e Test provides the test environment for the NZ region. Constructors | Improve this Doc View Source ZipEnvironment(String, Uri, Uri) Full contructor. Declaration public ZipEnvironment(string audience, Uri tokenEndpoint, Uri baseUrl) Parameters Type Name Description String audience The 'audience' or 'API Identifier' required when requesting an auth token for this environment. Uri tokenEndpoint The full URL used to request an auth token to access the API for this endpoint. Uri baseUrl The root url (including common sub-path) to the API for this environment. Properties | Improve this Doc View Source Audience Returns the 'audience'/'API Identifier' associated with this environment. Declaration public string Audience { get; } Property Value Type Description String | Improve this Doc View Source BaseUrl Returns base url (including common root path) for this environment. Declaration public Uri BaseUrl { get; } Property Value Type Description Uri | Improve this Doc View Source TokenEndpoint Returns the full url used to retrieve an auth token for this environment. Declaration public Uri TokenEndpoint { get; } Property Value Type Description Uri See Also Production Test"
  },
  "api/Yort.Zip.InStore.IZipClient.html": {
    "href": "api/Yort.Zip.InStore.IZipClient.html",
    "title": "Interface IZipClient | Yort.Zip.InStore",
    "keywords": "Interface IZipClient An interface for the primary object used to access the Zip payments API. Inherited Members IDisposable.Dispose() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public interface IZipClient : IDisposable Remarks This interface exists primarily to support mocking/stubbing out of the api client for testing purposes. Ideally client code should use this interface as the type for all reference to the implementation instance to support runtime replacement of the implementation. Methods | Improve this Doc View Source CreateOrderAsync(CreateOrderRequest) Creates a new order (payment) with Zip. Declaration Task<CreateOrderResponse> CreateOrderAsync(CreateOrderRequest request) Parameters Type Name Description CreateOrderRequest request Details of the order to be created. Returns Type Description Task < CreateOrderResponse > Details of the created order if succesful, otherwise throws an exception. Exceptions Type Condition ArgumentNullException Thrown if request is null. | Improve this Doc View Source GetOrderStatusAsync(OrderStatusRequest) Requests the current status of the specified order from the Zip API. Declaration Task<OrderStatusResponse> GetOrderStatusAsync(OrderStatusRequest request) Parameters Type Name Description OrderStatusRequest request A OrderStatusRequest providing details of the order to return the status of. Returns Type Description Task < OrderStatusResponse > If successful a OrderStatusResponse containing details of the specified order's status. Otherwise throws an exception. Exceptions Type Condition ArgumentNullException Thrown if request or any required sub-property is null. ArgumentException Thrown if any sub-property of request is determined to be invalid. See Also ZipClient"
  },
  "api/Yort.Zip.InStore.ZipRequestOptionsBase.html": {
    "href": "api/Yort.Zip.InStore.ZipRequestOptionsBase.html",
    "title": "Class ZipRequestOptionsBase | Yort.Zip.InStore",
    "keywords": "Class ZipRequestOptionsBase Base class for request options classes, providing a common and extensible interface for all requests. Inheritance Object ZipRequestOptionsBase CreateOrderRequest OrderStatusRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public abstract class ZipRequestOptionsBase Methods | Improve this Doc View Source Validate() Validates the properties of this request match the known design time requirements, i.e are all required properties provided. Declaration public abstract void Validate() Remarks Throws exceptions (typically ArgumentException , ArgumentNullException or ArgumentOutOfRangeException ) if any property is in a known invalid state."
  },
  "api/Yort.Zip.InStore.OrderStatusResponse.html": {
    "href": "api/Yort.Zip.InStore.OrderStatusResponse.html",
    "title": "Class OrderStatusResponse | Yort.Zip.InStore",
    "keywords": "Class OrderStatusResponse Represents the response of a successful GetOrderStatusAsync(OrderStatusRequest) call. Inheritance Object OrderStatusResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class OrderStatusResponse Properties | Improve this Doc View Source OrderNumber The human readable form of a Zip order id. Declaration public string OrderNumber { get; set; } Property Value Type Description String | Improve this Doc View Source Status The status of the order. Declaration public string Status { get; set; } Property Value Type Description String"
  },
  "api/Yort.Zip.InStore.CreateOrderResponse.html": {
    "href": "api/Yort.Zip.InStore.CreateOrderResponse.html",
    "title": "Class CreateOrderResponse | Yort.Zip.InStore",
    "keywords": "Class CreateOrderResponse Contains the initial details of an order created in the Zip system. Inheritance Object CreateOrderResponse Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class CreateOrderResponse Properties | Improve this Doc View Source OrderExpiry Gets or sets the expiry time of the order as returned by the Zip API. Declaration public DateTimeOffset? OrderExpiry { get; set; } Property Value Type Description Nullable < DateTimeOffset > | Improve this Doc View Source OrderId Gets or sets the unique id of the newly created order (or existing order using the same merchant reference, see EnableUniqueMerchantReferenceCheck ) within the Zip system. Declaration public string OrderId { get; set; } Property Value Type Description String See Also NewZipOrder CreateOrderAsync ( CreateOrderRequest )"
  },
  "api/Yort.Zip.InStore.OrderStatusRequest.html": {
    "href": "api/Yort.Zip.InStore.OrderStatusRequest.html",
    "title": "Class OrderStatusRequest | Yort.Zip.InStore",
    "keywords": "Class OrderStatusRequest Represents details of a request to retrieve the current status of an order in the Zip system. Inheritance Object ZipRequestOptionsBase OrderStatusRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class OrderStatusRequest : ZipRequestOptionsBase Properties | Improve this Doc View Source OrderId The unique id of the order within the Zip system, as returned in OrderId . Declaration public string OrderId { get; set; } Property Value Type Description String Methods | Improve this Doc View Source Validate() Validates this request as much as possible prior to sending it to the Zip API. Declaration public override void Validate() Overrides ZipRequestOptionsBase.Validate() Exceptions Type Condition ArgumentNullException Thrown if OrderId is null. ArgumentException Thrown if OrderId is blank or contains only whitespace."
  },
  "api/Yort.Zip.InStore.ZipPaymentFlow.html": {
    "href": "api/Yort.Zip.InStore.ZipPaymentFlow.html",
    "title": "Class ZipPaymentFlow | Yort.Zip.InStore",
    "keywords": "Class ZipPaymentFlow A class that exposes constants for the known allowed values of the PaymentFlow property. Inheritance Object ZipPaymentFlow Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public static class ZipPaymentFlow Fields | Improve this Doc View Source Auth Indicates that an auth should be taken by the initial order creation, and a subsequent call to commit or rollback the payment should be made. Declaration public const string Auth = \"auth\" Field Value Type Description String | Improve this Doc View Source Payment Indicates that payment should be fully completed without the requirement to 'capture' the outcome. Declaration public const string Payment = \"payment\" Field Value Type Description String"
  },
  "api/Yort.Zip.InStore.CreateOrderRequest.html": {
    "href": "api/Yort.Zip.InStore.CreateOrderRequest.html",
    "title": "Class CreateOrderRequest | Yort.Zip.InStore",
    "keywords": "Class CreateOrderRequest Contains details of an order (request for payment) to be created within the Zip system. Inheritance Object ZipRequestOptionsBase CreateOrderRequest Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class CreateOrderRequest : ZipRequestOptionsBase Properties | Improve this Doc View Source EnableUniqueMerchantReferenceCheck Determines if Zip is instructed to check if the MerchantReference has already been used and if so behave in an idempotent fashion (return the original response instead of creating a duplicate order). Declaration public bool EnableUniqueMerchantReferenceCheck { get; set; } Property Value Type Description Boolean Remarks The default value is true, which enables the duplicate checking and idempotent responses. Set to false only if you want to allow duplicate orders with the same merchant reference to be created. If this is set to false and a merchant reference is reused, a new order with a new Zip order id will be created. | Improve this Doc View Source Order Specifies the details of the new Zip order to be created. Declaration public NewZipOrder Order { get; set; } Property Value Type Description NewZipOrder Methods | Improve this Doc View Source Validate() Validates this request as much as possible prior to sending it to the Zip API. Declaration public override void Validate() Overrides ZipRequestOptionsBase.Validate() Exceptions Type Condition ArgumentNullException Thrown if Order or any of it's required sub-properties are null. ArgumentException Thrown if any of the sub-properties of Order are determined to be invalid. See Also CreateOrderRequest CreateOrderAsync ( CreateOrderRequest )"
  },
  "api/Yort.Zip.InStore.ZipOrderItem.html": {
    "href": "api/Yort.Zip.InStore.ZipOrderItem.html",
    "title": "Class ZipOrderItem | Yort.Zip.InStore",
    "keywords": "Class ZipOrderItem Represents information about an item purchased on a Zip order, used to show the end-consumer details of their purchase in the Zip consumer portal. Inheritance Object ZipOrderItem Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class ZipOrderItem Properties | Improve this Doc View Source Description A description of the item. Declaration public string Description { get; set; } Property Value Type Description String | Improve this Doc View Source Name A short name of the item. Declaration public string Name { get; set; } Property Value Type Description String | Improve this Doc View Source Price The price the item was purchased at. Declaration public string Price { get; set; } Property Value Type Description String | Improve this Doc View Source Quantity The quantity of this item purchased. Declaration public string Quantity { get; set; } Property Value Type Description String | Improve this Doc View Source Sku The unique sku code of the item. Declaration public string Sku { get; set; } Property Value Type Description String"
  },
  "api/Yort.Zip.InStore.NewZipOrder.html": {
    "href": "api/Yort.Zip.InStore.NewZipOrder.html",
    "title": "Class NewZipOrder | Yort.Zip.InStore",
    "keywords": "Class NewZipOrder Contains details of an order (request for payment) to be created within the Zip system. Inheritance Object NewZipOrder Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class NewZipOrder Properties | Improve this Doc View Source Amount The amount to be charged to the consumer by Zip. Required. Must be a positive, non-zero value. Declaration public decimal Amount { get; set; } Property Value Type Description Decimal | Improve this Doc View Source CustomerApprovalCode The pre-approval code generated by the csutomer using their Zip app or web login. Required. Declaration public string CustomerApprovalCode { get; set; } Property Value Type Description String | Improve this Doc View Source Items A summary of the items purchased on this order which will be displayed to the end consumer as part of their purchase history. Optional. Declaration public List<ZipOrderItem> Items { get; set; } Property Value Type Description List < ZipOrderItem > Remarks This collection defaults to null, to add items first set it to either an empty collection or a pre-loaded collection of ZipOrderItem instances. | Improve this Doc View Source MerchantReference The unique reference for this order as generated by the merchant. Required. Declaration public string MerchantReference { get; set; } Property Value Type Description String | Improve this Doc View Source Operator A reference (name or id) of the staff person serving the customer at the POS. Required. Declaration public string Operator { get; set; } Property Value Type Description String | Improve this Doc View Source PaymentFlow Determines whether this order results in a payment or an authorisation which must be subsequently confirmed. Required. Declaration public string PaymentFlow { get; set; } Property Value Type Description String Remarks The default is Payment . See Also ZipPaymentFlow See Also CreateOrderResponse CreateOrderAsync ( CreateOrderRequest )"
  },
  "api/Yort.Zip.InStore.ZipClient.html": {
    "href": "api/Yort.Zip.InStore.ZipClient.html",
    "title": "Class ZipClient | Yort.Zip.InStore",
    "keywords": "Class ZipClient The main class used to interact with the Zip payments API. Inheritance Object ZipClient Implements IZipClient IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public class ZipClient : IZipClient, IDisposable Constructors | Improve this Doc View Source ZipClient(ZipEnvironment) Full constructor. Declaration public ZipClient(ZipEnvironment environment) Parameters Type Name Description ZipEnvironment environment The ZipEnvironment for the API to call. Methods | Improve this Doc View Source CreateOrderAsync(CreateOrderRequest) Creates a new order (payment) with Zip. Declaration public Task<CreateOrderResponse> CreateOrderAsync(CreateOrderRequest request) Parameters Type Name Description CreateOrderRequest request Details of the order to be created. Returns Type Description Task < CreateOrderResponse > Details of the created order if succesful, otherwise throws an exception. Exceptions Type Condition ArgumentNullException Thrown if request is null. | Improve this Doc View Source Dispose() Disposes this instance and all internal resources. Declaration public void Dispose() See Also Dispose(Boolean) | Improve this Doc View Source Dispose(Boolean) Disposes resources used by this instance. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description Boolean disposing True if dispose is being called explicitly by client code, or false if it is being called from a finalizer (indicating only unmanaged resources should be cleaned up). See Also Dispose() | Improve this Doc View Source GetOrderStatusAsync(OrderStatusRequest) Requests the current status of the specified order from the Zip API. Declaration public Task<OrderStatusResponse> GetOrderStatusAsync(OrderStatusRequest request) Parameters Type Name Description OrderStatusRequest request A OrderStatusRequest providing details of the order to return the status of. Returns Type Description Task < OrderStatusResponse > If successful a OrderStatusResponse containing details of the specified order's status. Otherwise throws an exception. Exceptions Type Condition ArgumentNullException Thrown if request or any required sub-property is null. ArgumentException Thrown if any sub-property of request is determined to be invalid. Implements IZipClient System.IDisposable See Also IZipClient"
  },
  "api/Yort.Zip.InStore.html": {
    "href": "api/Yort.Zip.InStore.html",
    "title": "Namespace Yort.Zip.InStore | Yort.Zip.InStore",
    "keywords": "Namespace Yort.Zip.InStore Classes CreateOrderRequest Contains details of an order (request for payment) to be created within the Zip system. CreateOrderResponse Contains the initial details of an order created in the Zip system. NewZipOrder Contains details of an order (request for payment) to be created within the Zip system. OrderStatusRequest Represents details of a request to retrieve the current status of an order in the Zip system. OrderStatusResponse Represents the response of a successful GetOrderStatusAsync(OrderStatusRequest) call. ZipClient The main class used to interact with the Zip payments API. ZipEnvironment Represents a particular environment for the Zip API (i.e test for NZ merchants, production for AU merchants etc). ZipEnvironment.NewZealand Provides pre-build environment instances for the New Zealand region. ZipOrderItem Represents information about an item purchased on a Zip order, used to show the end-consumer details of their purchase in the Zip consumer portal. ZipOrderStatus Provides a list of known statuses for Zip orders. ZipPaymentFlow A class that exposes constants for the known allowed values of the PaymentFlow property. ZipRequestOptionsBase Base class for request options classes, providing a common and extensible interface for all requests. Interfaces IZipClient An interface for the primary object used to access the Zip payments API."
  },
  "api/Yort.Zip.InStore.ZipEnvironment.NewZealand.html": {
    "href": "api/Yort.Zip.InStore.ZipEnvironment.NewZealand.html",
    "title": "Class ZipEnvironment.NewZealand | Yort.Zip.InStore",
    "keywords": "Class ZipEnvironment.NewZealand Provides pre-build environment instances for the New Zealand region. Inheritance Object ZipEnvironment.NewZealand Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public static class NewZealand Properties | Improve this Doc View Source Production Provides a pre-configured ZipEnvironment instance with correct values for the production environment for NZ merchants. Declaration public static ZipEnvironment Production { get; } Property Value Type Description ZipEnvironment | Improve this Doc View Source Test Provides a pre-configured ZipEnvironment instance with correct values for the test environment for NZ merchants. Declaration public static ZipEnvironment Test { get; } Property Value Type Description ZipEnvironment"
  },
  "api/Yort.Zip.InStore.ZipOrderStatus.html": {
    "href": "api/Yort.Zip.InStore.ZipOrderStatus.html",
    "title": "Class ZipOrderStatus | Yort.Zip.InStore",
    "keywords": "Class ZipOrderStatus Provides a list of known statuses for Zip orders. Inheritance Object ZipOrderStatus Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Yort.Zip.InStore Assembly : Yort.Zip.InStore.dll Syntax public static class ZipOrderStatus Fields | Improve this Doc View Source Approved The order has been approved and paid for by the customer. This status is relevant to an order that has been created with the Auth flow. Declaration public const string Approved = \"approved\" Field Value Type Description String | Improve this Doc View Source Cancelled The order has been cancelled either prior to the customer approving/declining, or the order has been rolled back by the merchant after a succesful Auth . Declaration public const string Cancelled = \"cancelled\" Field Value Type Description String | Improve this Doc View Source Complete The order has been paid and the order is complete. This means either the Payment flow as used and payment successful, or the the Auth was used and the payment was committed. Declaration public const string Complete = \"complete\" Field Value Type Description String | Improve this Doc View Source Declined The order was declined by the user. Declaration public const string Declined = \"declined\" Field Value Type Description String | Improve this Doc View Source Expired The order has timed out. Declaration public const string Expired = \"expired\" Field Value Type Description String | Improve this Doc View Source Pending Indicates the order is still pending approval or cancellation by the system/consumer. The client should continue polling. Declaration public const string Pending = \"pending\" Field Value Type Description String Methods | Improve this Doc View Source IsTerminalStatus(String) Returns true if the status provider is a known, final status - that is a status that should not change again. Declaration public static bool IsTerminalStatus(string status) Parameters Type Name Description String status The status to check. Returns Type Description Boolean True if the status is final, otherwise false."
  }
}