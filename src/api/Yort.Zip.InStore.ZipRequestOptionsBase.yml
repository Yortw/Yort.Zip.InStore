### YamlMime:ManagedReference
items:
- uid: Yort.Zip.InStore.ZipRequestOptionsBase
  commentId: T:Yort.Zip.InStore.ZipRequestOptionsBase
  id: ZipRequestOptionsBase
  parent: Yort.Zip.InStore
  children:
  - Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders
  - Yort.Zip.InStore.ZipRequestOptionsBase.Validate
  langs:
  - csharp
  - vb
  name: ZipRequestOptionsBase
  nameWithType: ZipRequestOptionsBase
  fullName: Yort.Zip.InStore.ZipRequestOptionsBase
  type: Class
  source:
    remote:
      path: src/ZipRequestOptionsBase.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ZipRequestOptionsBase
    path: ZipRequestOptionsBase.cs
    startLine: 9
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nBase class for request options classes, providing a common and extensible interface for all requests.\n"
  example: []
  syntax:
    content: public abstract class ZipRequestOptionsBase
    content.vb: Public MustInherit Class ZipRequestOptionsBase
  inheritance:
  - System.Object
  derivedClasses:
  - Yort.Zip.InStore.CancelOrderRequest
  - Yort.Zip.InStore.CommitOrderRequest
  - Yort.Zip.InStore.CreateOrderRequest
  - Yort.Zip.InStore.OrderStatusRequest
  - Yort.Zip.InStore.RefundOrderRequest
  - Yort.Zip.InStore.RollbackOrderRequest
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Yort.Zip.InStore.ZipRequestOptionsBase.Validate
  commentId: M:Yort.Zip.InStore.ZipRequestOptionsBase.Validate
  id: Validate
  parent: Yort.Zip.InStore.ZipRequestOptionsBase
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: ZipRequestOptionsBase.Validate()
  fullName: Yort.Zip.InStore.ZipRequestOptionsBase.Validate()
  type: Method
  source:
    remote:
      path: src/ZipRequestOptionsBase.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Validate
    path: ZipRequestOptionsBase.cs
    startLine: 18
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nValidates the properties of this request match the known design time requirements, i.e are all required properties provided.\n"
  remarks: "\n<p>Throws exceptions (typically <xref href=\"System.ArgumentException\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"System.ArgumentNullException\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.ArgumentOutOfRangeException\" data-throw-if-not-resolved=\"false\"></xref>) if any property is in a known invalid state.</p>\n"
  example: []
  syntax:
    content: public abstract void Validate()
    content.vb: Public MustOverride Sub Validate
  overload: Yort.Zip.InStore.ZipRequestOptionsBase.Validate*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders
  commentId: M:Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders
  id: GetCustomHttpHeaders
  parent: Yort.Zip.InStore.ZipRequestOptionsBase
  langs:
  - csharp
  - vb
  name: GetCustomHttpHeaders()
  nameWithType: ZipRequestOptionsBase.GetCustomHttpHeaders()
  fullName: Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders()
  type: Method
  source:
    remote:
      path: src/ZipRequestOptionsBase.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: GetCustomHttpHeaders
    path: ZipRequestOptionsBase.cs
    startLine: 27
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nReturns a list of key value pairs to be applied as HTTP headers to HTTP request for this request type.\n"
  remarks: "\n<p>By default returns null indicating there are no custom headers. Can be overridden by derived types to specify otherwise.</p>\n"
  example: []
  syntax:
    content: public virtual Dictionary<string, string> GetCustomHttpHeaders()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: A dictionary containing key/value pairs to be applied as custom HTTP headers, or null if no custom headers apply.
    content.vb: Public Overridable Function GetCustomHttpHeaders As Dictionary(Of String, String)
  overload: Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Yort.Zip.InStore
  commentId: N:Yort.Zip.InStore
  name: Yort.Zip.InStore
  nameWithType: Yort.Zip.InStore
  fullName: Yort.Zip.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Yort.Zip.InStore.ZipRequestOptionsBase.Validate*
  commentId: Overload:Yort.Zip.InStore.ZipRequestOptionsBase.Validate
  name: Validate
  nameWithType: ZipRequestOptionsBase.Validate
  fullName: Yort.Zip.InStore.ZipRequestOptionsBase.Validate
- uid: Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders*
  commentId: Overload:Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders
  name: GetCustomHttpHeaders
  nameWithType: ZipRequestOptionsBase.GetCustomHttpHeaders
  fullName: Yort.Zip.InStore.ZipRequestOptionsBase.GetCustomHttpHeaders
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
