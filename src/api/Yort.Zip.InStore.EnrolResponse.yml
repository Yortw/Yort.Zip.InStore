### YamlMime:ManagedReference
items:
- uid: Yort.Zip.InStore.EnrolResponse
  commentId: T:Yort.Zip.InStore.EnrolResponse
  id: EnrolResponse
  parent: Yort.Zip.InStore
  children:
  - Yort.Zip.InStore.EnrolResponse.ClientId
  - Yort.Zip.InStore.EnrolResponse.ClientSecret
  langs:
  - csharp
  - vb
  name: EnrolResponse
  nameWithType: EnrolResponse
  fullName: Yort.Zip.InStore.EnrolResponse
  type: Class
  source:
    remote:
      path: src/EnrolResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: EnrolResponse
    path: EnrolResponse.cs
    startLine: 10
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nContains the result of a successful <xref href=\"Yort.Zip.InStore.EnrolRequest\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public class EnrolResponse
    content.vb: Public Class EnrolResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.Zip.InStore.EnrolResponse.ClientId
  commentId: P:Yort.Zip.InStore.EnrolResponse.ClientId
  id: ClientId
  parent: Yort.Zip.InStore.EnrolResponse
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: EnrolResponse.ClientId
  fullName: Yort.Zip.InStore.EnrolResponse.ClientId
  type: Property
  source:
    remote:
      path: src/EnrolResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ClientId
    path: EnrolResponse.cs
    startLine: 15
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe client id to be used when requesting new authentication tokens from Zip.\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("client_id")]

      public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("client_id")>

      Public Property ClientId As String
  overload: Yort.Zip.InStore.EnrolResponse.ClientId*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: client_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.EnrolResponse.ClientSecret
  commentId: P:Yort.Zip.InStore.EnrolResponse.ClientSecret
  id: ClientSecret
  parent: Yort.Zip.InStore.EnrolResponse
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: EnrolResponse.ClientSecret
  fullName: Yort.Zip.InStore.EnrolResponse.ClientSecret
  type: Property
  source:
    remote:
      path: src/EnrolResponse.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ClientSecret
    path: EnrolResponse.cs
    startLine: 20
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe client secret to be used when requesting new authentication tokens from Zip.\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("client_secret")]

      public string ClientSecret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("client_secret")>

      Public Property ClientSecret As String
  overload: Yort.Zip.InStore.EnrolResponse.ClientSecret*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: client_secret
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.Zip.InStore.EnrolRequest
  commentId: T:Yort.Zip.InStore.EnrolRequest
  parent: Yort.Zip.InStore
  name: EnrolRequest
  nameWithType: EnrolRequest
  fullName: Yort.Zip.InStore.EnrolRequest
- uid: Yort.Zip.InStore
  commentId: N:Yort.Zip.InStore
  name: Yort.Zip.InStore
  nameWithType: Yort.Zip.InStore
  fullName: Yort.Zip.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Zip.InStore.EnrolResponse.ClientId*
  commentId: Overload:Yort.Zip.InStore.EnrolResponse.ClientId
  name: ClientId
  nameWithType: EnrolResponse.ClientId
  fullName: Yort.Zip.InStore.EnrolResponse.ClientId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Zip.InStore.EnrolResponse.ClientSecret*
  commentId: Overload:Yort.Zip.InStore.EnrolResponse.ClientSecret
  name: ClientSecret
  nameWithType: EnrolResponse.ClientSecret
  fullName: Yort.Zip.InStore.EnrolResponse.ClientSecret
