### YamlMime:ManagedReference
items:
- uid: Yort.Zip.InStore.ZipOrder
  commentId: T:Yort.Zip.InStore.ZipOrder
  id: ZipOrder
  parent: Yort.Zip.InStore
  children:
  - Yort.Zip.InStore.ZipOrder.Amount
  - Yort.Zip.InStore.ZipOrder.CustomerApprovalCode
  - Yort.Zip.InStore.ZipOrder.Items
  - Yort.Zip.InStore.ZipOrder.MerchantReference
  - Yort.Zip.InStore.ZipOrder.Operator
  - Yort.Zip.InStore.ZipOrder.PaymentFlow
  langs:
  - csharp
  - vb
  name: ZipOrder
  nameWithType: ZipOrder
  fullName: Yort.Zip.InStore.ZipOrder
  type: Class
  source:
    remote:
      path: src/ZipOrder.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ZipOrder
    path: ZipOrder.cs
    startLine: 12
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nContains details of an order (request for payment) to be created within the Zip system.\n"
  example: []
  syntax:
    content: public class ZipOrder
    content.vb: Public Class ZipOrder
  seealso:
  - linkId: Yort.Zip.InStore.CreateOrderResponse
    commentId: T:Yort.Zip.InStore.CreateOrderResponse
  - linkId: Yort.Zip.InStore.IZipClient.CreateOrderAsync(Yort.Zip.InStore.CreateOrderRequest)
    commentId: M:Yort.Zip.InStore.IZipClient.CreateOrderAsync(Yort.Zip.InStore.CreateOrderRequest)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.Zip.InStore.ZipOrder.CustomerApprovalCode
  commentId: P:Yort.Zip.InStore.ZipOrder.CustomerApprovalCode
  id: CustomerApprovalCode
  parent: Yort.Zip.InStore.ZipOrder
  langs:
  - csharp
  - vb
  name: CustomerApprovalCode
  nameWithType: ZipOrder.CustomerApprovalCode
  fullName: Yort.Zip.InStore.ZipOrder.CustomerApprovalCode
  type: Property
  source:
    remote:
      path: src/ZipOrder.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: CustomerApprovalCode
    path: ZipOrder.cs
    startLine: 17
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe pre-approval code generated by the csutomer using their Zip app or web login. Required.\n"
  example: []
  syntax:
    content: public string CustomerApprovalCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CustomerApprovalCode As String
  overload: Yort.Zip.InStore.ZipOrder.CustomerApprovalCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipOrder.Operator
  commentId: P:Yort.Zip.InStore.ZipOrder.Operator
  id: Operator
  parent: Yort.Zip.InStore.ZipOrder
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: ZipOrder.Operator
  fullName: Yort.Zip.InStore.ZipOrder.Operator
  type: Property
  source:
    remote:
      path: src/ZipOrder.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Operator
    path: ZipOrder.cs
    startLine: 21
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nA reference (name or id) of the staff person serving the customer at the POS. Required.\n"
  example: []
  syntax:
    content: public string Operator { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Operator As String
  overload: Yort.Zip.InStore.ZipOrder.Operator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipOrder.Amount
  commentId: P:Yort.Zip.InStore.ZipOrder.Amount
  id: Amount
  parent: Yort.Zip.InStore.ZipOrder
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: ZipOrder.Amount
  fullName: Yort.Zip.InStore.ZipOrder.Amount
  type: Property
  source:
    remote:
      path: src/ZipOrder.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Amount
    path: ZipOrder.cs
    startLine: 25
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe amount to be charged to the consumer by Zip. Required. Must be a positive, non-zero value.\n"
  example: []
  syntax:
    content: public decimal Amount { get; set; }
    parameters: []
    return:
      type: System.Decimal
    content.vb: Public Property Amount As Decimal
  overload: Yort.Zip.InStore.ZipOrder.Amount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipOrder.MerchantReference
  commentId: P:Yort.Zip.InStore.ZipOrder.MerchantReference
  id: MerchantReference
  parent: Yort.Zip.InStore.ZipOrder
  langs:
  - csharp
  - vb
  name: MerchantReference
  nameWithType: ZipOrder.MerchantReference
  fullName: Yort.Zip.InStore.ZipOrder.MerchantReference
  type: Property
  source:
    remote:
      path: src/ZipOrder.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: MerchantReference
    path: ZipOrder.cs
    startLine: 29
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe unique reference for this order as generated by the merchant. Required.\n"
  example: []
  syntax:
    content: public string MerchantReference { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MerchantReference As String
  overload: Yort.Zip.InStore.ZipOrder.MerchantReference*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipOrder.PaymentFlow
  commentId: P:Yort.Zip.InStore.ZipOrder.PaymentFlow
  id: PaymentFlow
  parent: Yort.Zip.InStore.ZipOrder
  langs:
  - csharp
  - vb
  name: PaymentFlow
  nameWithType: ZipOrder.PaymentFlow
  fullName: Yort.Zip.InStore.ZipOrder.PaymentFlow
  type: Property
  source:
    remote:
      path: src/ZipOrder.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: PaymentFlow
    path: ZipOrder.cs
    startLine: 38
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nDetermines whether this order results in a payment or an authorisation which must be subsequently confirmed. Required.\n"
  remarks: "\n<p>The default is <xref href=\"Yort.Zip.InStore.ZipPaymentFlow.Payment\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public string PaymentFlow { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PaymentFlow As String
  overload: Yort.Zip.InStore.ZipOrder.PaymentFlow*
  seealso:
  - linkId: Yort.Zip.InStore.ZipPaymentFlow
    commentId: T:Yort.Zip.InStore.ZipPaymentFlow
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipOrder.Items
  commentId: P:Yort.Zip.InStore.ZipOrder.Items
  id: Items
  parent: Yort.Zip.InStore.ZipOrder
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: ZipOrder.Items
  fullName: Yort.Zip.InStore.ZipOrder.Items
  type: Property
  source:
    remote:
      path: src/ZipOrder.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Items
    path: ZipOrder.cs
    startLine: 46
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nA summary of the items purchased on this order which will be displayed to the end consumer as part of their purchase history. Optional.\n"
  remarks: "\n<p>This collection defaults to null, to add items first set it to either an empty collection or a pre-loaded collection of <xref href=\"Yort.Zip.InStore.ZipOrderItem\" data-throw-if-not-resolved=\"false\"></xref> instances.</p>\n"
  example: []
  syntax:
    content: public List<ZipOrderItem> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Yort.Zip.InStore.ZipOrderItem}
    content.vb: Public Property Items As List(Of ZipOrderItem)
  overload: Yort.Zip.InStore.ZipOrder.Items*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.Zip.InStore.CreateOrderResponse
  commentId: T:Yort.Zip.InStore.CreateOrderResponse
  name: CreateOrderResponse
  nameWithType: CreateOrderResponse
  fullName: Yort.Zip.InStore.CreateOrderResponse
- uid: Yort.Zip.InStore.IZipClient.CreateOrderAsync(Yort.Zip.InStore.CreateOrderRequest)
  commentId: M:Yort.Zip.InStore.IZipClient.CreateOrderAsync(Yort.Zip.InStore.CreateOrderRequest)
  parent: Yort.Zip.InStore.IZipClient
  name: CreateOrderAsync(CreateOrderRequest)
  nameWithType: IZipClient.CreateOrderAsync(CreateOrderRequest)
  fullName: Yort.Zip.InStore.IZipClient.CreateOrderAsync(Yort.Zip.InStore.CreateOrderRequest)
  spec.csharp:
  - uid: Yort.Zip.InStore.IZipClient.CreateOrderAsync(Yort.Zip.InStore.CreateOrderRequest)
    name: CreateOrderAsync
    nameWithType: IZipClient.CreateOrderAsync
    fullName: Yort.Zip.InStore.IZipClient.CreateOrderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Zip.InStore.CreateOrderRequest
    name: CreateOrderRequest
    nameWithType: CreateOrderRequest
    fullName: Yort.Zip.InStore.CreateOrderRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Zip.InStore.IZipClient.CreateOrderAsync(Yort.Zip.InStore.CreateOrderRequest)
    name: CreateOrderAsync
    nameWithType: IZipClient.CreateOrderAsync
    fullName: Yort.Zip.InStore.IZipClient.CreateOrderAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Zip.InStore.CreateOrderRequest
    name: CreateOrderRequest
    nameWithType: CreateOrderRequest
    fullName: Yort.Zip.InStore.CreateOrderRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Zip.InStore
  commentId: N:Yort.Zip.InStore
  name: Yort.Zip.InStore
  nameWithType: Yort.Zip.InStore
  fullName: Yort.Zip.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Zip.InStore.IZipClient
  commentId: T:Yort.Zip.InStore.IZipClient
  parent: Yort.Zip.InStore
  name: IZipClient
  nameWithType: IZipClient
  fullName: Yort.Zip.InStore.IZipClient
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Zip.InStore.ZipOrder.CustomerApprovalCode*
  commentId: Overload:Yort.Zip.InStore.ZipOrder.CustomerApprovalCode
  name: CustomerApprovalCode
  nameWithType: ZipOrder.CustomerApprovalCode
  fullName: Yort.Zip.InStore.ZipOrder.CustomerApprovalCode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Zip.InStore.ZipOrder.Operator*
  commentId: Overload:Yort.Zip.InStore.ZipOrder.Operator
  name: Operator
  nameWithType: ZipOrder.Operator
  fullName: Yort.Zip.InStore.ZipOrder.Operator
- uid: Yort.Zip.InStore.ZipOrder.Amount*
  commentId: Overload:Yort.Zip.InStore.ZipOrder.Amount
  name: Amount
  nameWithType: ZipOrder.Amount
  fullName: Yort.Zip.InStore.ZipOrder.Amount
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: Yort.Zip.InStore.ZipOrder.MerchantReference*
  commentId: Overload:Yort.Zip.InStore.ZipOrder.MerchantReference
  name: MerchantReference
  nameWithType: ZipOrder.MerchantReference
  fullName: Yort.Zip.InStore.ZipOrder.MerchantReference
- uid: Yort.Zip.InStore.ZipPaymentFlow.Payment
  commentId: F:Yort.Zip.InStore.ZipPaymentFlow.Payment
  isExternal: true
- uid: Yort.Zip.InStore.ZipPaymentFlow
  commentId: T:Yort.Zip.InStore.ZipPaymentFlow
  name: ZipPaymentFlow
  nameWithType: ZipPaymentFlow
  fullName: Yort.Zip.InStore.ZipPaymentFlow
- uid: Yort.Zip.InStore.ZipOrder.PaymentFlow*
  commentId: Overload:Yort.Zip.InStore.ZipOrder.PaymentFlow
  name: PaymentFlow
  nameWithType: ZipOrder.PaymentFlow
  fullName: Yort.Zip.InStore.ZipOrder.PaymentFlow
- uid: Yort.Zip.InStore.ZipOrderItem
  commentId: T:Yort.Zip.InStore.ZipOrderItem
  name: ZipOrderItem
  nameWithType: ZipOrderItem
  fullName: Yort.Zip.InStore.ZipOrderItem
- uid: Yort.Zip.InStore.ZipOrder.Items*
  commentId: Overload:Yort.Zip.InStore.ZipOrder.Items
  name: Items
  nameWithType: ZipOrder.Items
  fullName: Yort.Zip.InStore.ZipOrder.Items
- uid: System.Collections.Generic.List{Yort.Zip.InStore.ZipOrderItem}
  commentId: T:System.Collections.Generic.List{Yort.Zip.InStore.ZipOrderItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ZipOrderItem>
  nameWithType: List<ZipOrderItem>
  fullName: System.Collections.Generic.List<Yort.Zip.InStore.ZipOrderItem>
  nameWithType.vb: List(Of ZipOrderItem)
  fullName.vb: System.Collections.Generic.List(Of Yort.Zip.InStore.ZipOrderItem)
  name.vb: List(Of ZipOrderItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Yort.Zip.InStore.ZipOrderItem
    name: ZipOrderItem
    nameWithType: ZipOrderItem
    fullName: Yort.Zip.InStore.ZipOrderItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Yort.Zip.InStore.ZipOrderItem
    name: ZipOrderItem
    nameWithType: ZipOrderItem
    fullName: Yort.Zip.InStore.ZipOrderItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
