### YamlMime:ManagedReference
items:
- uid: Yort.Zip.InStore.ZipClientConfiguration
  commentId: T:Yort.Zip.InStore.ZipClientConfiguration
  id: ZipClientConfiguration
  parent: Yort.Zip.InStore
  children:
  - Yort.Zip.InStore.ZipClientConfiguration.#ctor(System.String,System.String,Yort.Zip.InStore.ZipEnvironment)
  - Yort.Zip.InStore.ZipClientConfiguration.ClientId
  - Yort.Zip.InStore.ZipClientConfiguration.ClientSecret
  - Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator
  - Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId
  - Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId
  - Yort.Zip.InStore.ZipClientConfiguration.Environment
  langs:
  - csharp
  - vb
  name: ZipClientConfiguration
  nameWithType: ZipClientConfiguration
  fullName: Yort.Zip.InStore.ZipClientConfiguration
  type: Class
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ZipClientConfiguration
    path: ZipClientConfig.cs
    startLine: 10
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nProvides details to a <xref href=\"Yort.Zip.InStore.ZipClient\" data-throw-if-not-resolved=\"false\"></xref> instance about how to access the Zip API.\n"
  example: []
  syntax:
    content: public class ZipClientConfiguration
    content.vb: Public Class ZipClientConfiguration
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.Zip.InStore.ZipClientConfiguration.#ctor(System.String,System.String,Yort.Zip.InStore.ZipEnvironment)
  commentId: M:Yort.Zip.InStore.ZipClientConfiguration.#ctor(System.String,System.String,Yort.Zip.InStore.ZipEnvironment)
  id: '#ctor(System.String,System.String,Yort.Zip.InStore.ZipEnvironment)'
  parent: Yort.Zip.InStore.ZipClientConfiguration
  langs:
  - csharp
  - vb
  name: ZipClientConfiguration(String, String, ZipEnvironment)
  nameWithType: ZipClientConfiguration.ZipClientConfiguration(String, String, ZipEnvironment)
  fullName: Yort.Zip.InStore.ZipClientConfiguration.ZipClientConfiguration(System.String, System.String, Yort.Zip.InStore.ZipEnvironment)
  type: Constructor
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: .ctor
    path: ZipClientConfig.cs
    startLine: 22
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nFull constructor.\n"
  example: []
  syntax:
    content: public ZipClientConfiguration(string clientId, string clientSecret, ZipEnvironment environment)
    parameters:
    - id: clientId
      type: System.String
      description: The client id used to request new authentication tokens. Can be null if you plan to retrieve it using the <xref href="Yort.Zip.InStore.IZipClient.EnrolAsync(Yort.Zip.InStore.EnrolRequest)" data-throw-if-not-resolved="false"></xref> mechanism.
    - id: clientSecret
      type: System.String
      description: The client secret used to request new authentication tokens. Can be null if you plan to retrieve it using the <xref href="Yort.Zip.InStore.IZipClient.EnrolAsync(Yort.Zip.InStore.EnrolRequest)" data-throw-if-not-resolved="false"></xref> mechanism.
    - id: environment
      type: Yort.Zip.InStore.ZipEnvironment
      description: The environment indicating the API instance to access. Required.
    content.vb: Public Sub New(clientId As String, clientSecret As String, environment As ZipEnvironment)
  overload: Yort.Zip.InStore.ZipClientConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipClientConfiguration.ClientId
  commentId: P:Yort.Zip.InStore.ZipClientConfiguration.ClientId
  id: ClientId
  parent: Yort.Zip.InStore.ZipClientConfiguration
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: ZipClientConfiguration.ClientId
  fullName: Yort.Zip.InStore.ZipClientConfiguration.ClientId
  type: Property
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ClientId
    path: ZipClientConfig.cs
    startLine: 32
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nReturns the client id value provided via the constructor.\n"
  example: []
  syntax:
    content: public string ClientId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClientId As String
  overload: Yort.Zip.InStore.ZipClientConfiguration.ClientId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Yort.Zip.InStore.ZipClientConfiguration.ClientSecret
  commentId: P:Yort.Zip.InStore.ZipClientConfiguration.ClientSecret
  id: ClientSecret
  parent: Yort.Zip.InStore.ZipClientConfiguration
  langs:
  - csharp
  - vb
  name: ClientSecret
  nameWithType: ZipClientConfiguration.ClientSecret
  fullName: Yort.Zip.InStore.ZipClientConfiguration.ClientSecret
  type: Property
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ClientSecret
    path: ZipClientConfig.cs
    startLine: 37
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nReturns the client secret value provided via the constructor.\n"
  example: []
  syntax:
    content: public string ClientSecret { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ClientSecret As String
  overload: Yort.Zip.InStore.ZipClientConfiguration.ClientSecret*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Yort.Zip.InStore.ZipClientConfiguration.Environment
  commentId: P:Yort.Zip.InStore.ZipClientConfiguration.Environment
  id: Environment
  parent: Yort.Zip.InStore.ZipClientConfiguration
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: ZipClientConfiguration.Environment
  fullName: Yort.Zip.InStore.ZipClientConfiguration.Environment
  type: Property
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Environment
    path: ZipClientConfig.cs
    startLine: 42
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nReturns the <xref href=\"Yort.Zip.InStore.ZipEnvironment\" data-throw-if-not-resolved=\"false\"></xref> value provided via the constructor.\n"
  example: []
  syntax:
    content: public ZipEnvironment Environment { get; }
    parameters: []
    return:
      type: Yort.Zip.InStore.ZipEnvironment
    content.vb: Public ReadOnly Property Environment As ZipEnvironment
  overload: Yort.Zip.InStore.ZipClientConfiguration.Environment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId
  commentId: P:Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId
  id: DefaultStoreId
  parent: Yort.Zip.InStore.ZipClientConfiguration
  langs:
  - csharp
  - vb
  name: DefaultStoreId
  nameWithType: ZipClientConfiguration.DefaultStoreId
  fullName: Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId
  type: Property
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: DefaultStoreId
    path: ZipClientConfig.cs
    startLine: 47
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nProvides the default store id to be sent on requests (that require a store id) if the request value is not already set (null).\n"
  example: []
  syntax:
    content: public string DefaultStoreId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultStoreId As String
  overload: Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId
  commentId: P:Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId
  id: DefaultTerminalId
  parent: Yort.Zip.InStore.ZipClientConfiguration
  langs:
  - csharp
  - vb
  name: DefaultTerminalId
  nameWithType: ZipClientConfiguration.DefaultTerminalId
  fullName: Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId
  type: Property
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: DefaultTerminalId
    path: ZipClientConfig.cs
    startLine: 52
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nProvides the default terminal id to be sent on requests (that require a terminal id) if the request value is not already set (null).\n"
  example: []
  syntax:
    content: public string DefaultTerminalId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultTerminalId As String
  overload: Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator
  commentId: P:Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator
  id: DefaultOperator
  parent: Yort.Zip.InStore.ZipClientConfiguration
  langs:
  - csharp
  - vb
  name: DefaultOperator
  nameWithType: ZipClientConfiguration.DefaultOperator
  fullName: Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator
  type: Property
  source:
    remote:
      path: src/ZipClientConfig.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: DefaultOperator
    path: ZipClientConfig.cs
    startLine: 57
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nProvides the default (POS) operator value to be sent on requests (that require an operator value) if the request value is not already set (null).\n"
  example: []
  syntax:
    content: public string DefaultOperator { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultOperator As String
  overload: Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.Zip.InStore.ZipClient
  commentId: T:Yort.Zip.InStore.ZipClient
  name: ZipClient
  nameWithType: ZipClient
  fullName: Yort.Zip.InStore.ZipClient
- uid: Yort.Zip.InStore
  commentId: N:Yort.Zip.InStore
  name: Yort.Zip.InStore
  nameWithType: Yort.Zip.InStore
  fullName: Yort.Zip.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Zip.InStore.IZipClient.EnrolAsync(Yort.Zip.InStore.EnrolRequest)
  commentId: M:Yort.Zip.InStore.IZipClient.EnrolAsync(Yort.Zip.InStore.EnrolRequest)
  parent: Yort.Zip.InStore.IZipClient
  name: EnrolAsync(EnrolRequest)
  nameWithType: IZipClient.EnrolAsync(EnrolRequest)
  fullName: Yort.Zip.InStore.IZipClient.EnrolAsync(Yort.Zip.InStore.EnrolRequest)
  spec.csharp:
  - uid: Yort.Zip.InStore.IZipClient.EnrolAsync(Yort.Zip.InStore.EnrolRequest)
    name: EnrolAsync
    nameWithType: IZipClient.EnrolAsync
    fullName: Yort.Zip.InStore.IZipClient.EnrolAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Zip.InStore.EnrolRequest
    name: EnrolRequest
    nameWithType: EnrolRequest
    fullName: Yort.Zip.InStore.EnrolRequest
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Yort.Zip.InStore.IZipClient.EnrolAsync(Yort.Zip.InStore.EnrolRequest)
    name: EnrolAsync
    nameWithType: IZipClient.EnrolAsync
    fullName: Yort.Zip.InStore.IZipClient.EnrolAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Yort.Zip.InStore.EnrolRequest
    name: EnrolRequest
    nameWithType: EnrolRequest
    fullName: Yort.Zip.InStore.EnrolRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Yort.Zip.InStore.ZipClientConfiguration.#ctor*
  commentId: Overload:Yort.Zip.InStore.ZipClientConfiguration.#ctor
  name: ZipClientConfiguration
  nameWithType: ZipClientConfiguration.ZipClientConfiguration
  fullName: Yort.Zip.InStore.ZipClientConfiguration.ZipClientConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Zip.InStore.ZipEnvironment
  commentId: T:Yort.Zip.InStore.ZipEnvironment
  parent: Yort.Zip.InStore
  name: ZipEnvironment
  nameWithType: ZipEnvironment
  fullName: Yort.Zip.InStore.ZipEnvironment
- uid: Yort.Zip.InStore.IZipClient
  commentId: T:Yort.Zip.InStore.IZipClient
  parent: Yort.Zip.InStore
  name: IZipClient
  nameWithType: IZipClient
  fullName: Yort.Zip.InStore.IZipClient
- uid: Yort.Zip.InStore.ZipClientConfiguration.ClientId*
  commentId: Overload:Yort.Zip.InStore.ZipClientConfiguration.ClientId
  name: ClientId
  nameWithType: ZipClientConfiguration.ClientId
  fullName: Yort.Zip.InStore.ZipClientConfiguration.ClientId
- uid: Yort.Zip.InStore.ZipClientConfiguration.ClientSecret*
  commentId: Overload:Yort.Zip.InStore.ZipClientConfiguration.ClientSecret
  name: ClientSecret
  nameWithType: ZipClientConfiguration.ClientSecret
  fullName: Yort.Zip.InStore.ZipClientConfiguration.ClientSecret
- uid: Yort.Zip.InStore.ZipClientConfiguration.Environment*
  commentId: Overload:Yort.Zip.InStore.ZipClientConfiguration.Environment
  name: Environment
  nameWithType: ZipClientConfiguration.Environment
  fullName: Yort.Zip.InStore.ZipClientConfiguration.Environment
- uid: Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId*
  commentId: Overload:Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId
  name: DefaultStoreId
  nameWithType: ZipClientConfiguration.DefaultStoreId
  fullName: Yort.Zip.InStore.ZipClientConfiguration.DefaultStoreId
- uid: Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId*
  commentId: Overload:Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId
  name: DefaultTerminalId
  nameWithType: ZipClientConfiguration.DefaultTerminalId
  fullName: Yort.Zip.InStore.ZipClientConfiguration.DefaultTerminalId
- uid: Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator*
  commentId: Overload:Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator
  name: DefaultOperator
  nameWithType: ZipClientConfiguration.DefaultOperator
  fullName: Yort.Zip.InStore.ZipClientConfiguration.DefaultOperator
