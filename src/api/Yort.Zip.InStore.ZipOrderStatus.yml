### YamlMime:ManagedReference
items:
- uid: Yort.Zip.InStore.ZipOrderStatus
  commentId: T:Yort.Zip.InStore.ZipOrderStatus
  id: ZipOrderStatus
  parent: Yort.Zip.InStore
  children:
  - Yort.Zip.InStore.ZipOrderStatus.Approved
  - Yort.Zip.InStore.ZipOrderStatus.Cancelled
  - Yort.Zip.InStore.ZipOrderStatus.Complete
  - Yort.Zip.InStore.ZipOrderStatus.Declined
  - Yort.Zip.InStore.ZipOrderStatus.Expired
  - Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus(System.String)
  - Yort.Zip.InStore.ZipOrderStatus.Pending
  langs:
  - csharp
  - vb
  name: ZipOrderStatus
  nameWithType: ZipOrderStatus
  fullName: Yort.Zip.InStore.ZipOrderStatus
  type: Class
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ZipOrderStatus
    path: ZipPaymentStatus.cs
    startLine: 10
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nProvides a list of known statuses for Zip orders.\n"
  example: []
  syntax:
    content: public static class ZipOrderStatus
    content.vb: Public Module ZipOrderStatus
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Yort.Zip.InStore.ZipOrderStatus.Pending
  commentId: F:Yort.Zip.InStore.ZipOrderStatus.Pending
  id: Pending
  parent: Yort.Zip.InStore.ZipOrderStatus
  langs:
  - csharp
  - vb
  name: Pending
  nameWithType: ZipOrderStatus.Pending
  fullName: Yort.Zip.InStore.ZipOrderStatus.Pending
  type: Field
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Pending
    path: ZipPaymentStatus.cs
    startLine: 15
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nIndicates the order is still pending approval or cancellation by the system/consumer. The client should continue polling.\n"
  example: []
  syntax:
    content: public const string Pending = "pending"
    return:
      type: System.String
    content.vb: Public Const Pending As String = "pending"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Zip.InStore.ZipOrderStatus.Approved
  commentId: F:Yort.Zip.InStore.ZipOrderStatus.Approved
  id: Approved
  parent: Yort.Zip.InStore.ZipOrderStatus
  langs:
  - csharp
  - vb
  name: Approved
  nameWithType: ZipOrderStatus.Approved
  fullName: Yort.Zip.InStore.ZipOrderStatus.Approved
  type: Field
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Approved
    path: ZipPaymentStatus.cs
    startLine: 20
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe order has been approved and paid for by the customer. This status is relevant to an order that has been created with the <xref href=\"Yort.Zip.InStore.ZipPaymentFlow.Auth\" data-throw-if-not-resolved=\"false\"></xref> flow.\n"
  example: []
  syntax:
    content: public const string Approved = "approved"
    return:
      type: System.String
    content.vb: Public Const Approved As String = "approved"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Zip.InStore.ZipOrderStatus.Complete
  commentId: F:Yort.Zip.InStore.ZipOrderStatus.Complete
  id: Complete
  parent: Yort.Zip.InStore.ZipOrderStatus
  langs:
  - csharp
  - vb
  name: Complete
  nameWithType: ZipOrderStatus.Complete
  fullName: Yort.Zip.InStore.ZipOrderStatus.Complete
  type: Field
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Complete
    path: ZipPaymentStatus.cs
    startLine: 25
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe order has been paid and the order is complete. This means either the <xref href=\"Yort.Zip.InStore.ZipPaymentFlow.Payment\" data-throw-if-not-resolved=\"false\"></xref> flow as used and payment successful, or the the <xref href=\"Yort.Zip.InStore.ZipPaymentFlow.Auth\" data-throw-if-not-resolved=\"false\"></xref> was used and the payment was committed.\n"
  example: []
  syntax:
    content: public const string Complete = "complete"
    return:
      type: System.String
    content.vb: Public Const Complete As String = "complete"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Zip.InStore.ZipOrderStatus.Declined
  commentId: F:Yort.Zip.InStore.ZipOrderStatus.Declined
  id: Declined
  parent: Yort.Zip.InStore.ZipOrderStatus
  langs:
  - csharp
  - vb
  name: Declined
  nameWithType: ZipOrderStatus.Declined
  fullName: Yort.Zip.InStore.ZipOrderStatus.Declined
  type: Field
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Declined
    path: ZipPaymentStatus.cs
    startLine: 30
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe order was declined by the user.\n"
  example: []
  syntax:
    content: public const string Declined = "declined"
    return:
      type: System.String
    content.vb: Public Const Declined As String = "declined"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Zip.InStore.ZipOrderStatus.Expired
  commentId: F:Yort.Zip.InStore.ZipOrderStatus.Expired
  id: Expired
  parent: Yort.Zip.InStore.ZipOrderStatus
  langs:
  - csharp
  - vb
  name: Expired
  nameWithType: ZipOrderStatus.Expired
  fullName: Yort.Zip.InStore.ZipOrderStatus.Expired
  type: Field
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Expired
    path: ZipPaymentStatus.cs
    startLine: 35
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe order has timed out.\n"
  example: []
  syntax:
    content: public const string Expired = "expired"
    return:
      type: System.String
    content.vb: Public Const Expired As String = "expired"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Zip.InStore.ZipOrderStatus.Cancelled
  commentId: F:Yort.Zip.InStore.ZipOrderStatus.Cancelled
  id: Cancelled
  parent: Yort.Zip.InStore.ZipOrderStatus
  langs:
  - csharp
  - vb
  name: Cancelled
  nameWithType: ZipOrderStatus.Cancelled
  fullName: Yort.Zip.InStore.ZipOrderStatus.Cancelled
  type: Field
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Cancelled
    path: ZipPaymentStatus.cs
    startLine: 40
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe order has been cancelled either prior to the customer approving/declining, or the order has been rolled back by the merchant after a succesful <xref href=\"Yort.Zip.InStore.ZipPaymentFlow.Auth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const string Cancelled = "cancelled"
    return:
      type: System.String
    content.vb: Public Const Cancelled As String = "cancelled"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus(System.String)
  commentId: M:Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus(System.String)
  id: IsTerminalStatus(System.String)
  parent: Yort.Zip.InStore.ZipOrderStatus
  langs:
  - csharp
  - vb
  name: IsTerminalStatus(String)
  nameWithType: ZipOrderStatus.IsTerminalStatus(String)
  fullName: Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus(System.String)
  type: Method
  source:
    remote:
      path: src/ZipPaymentStatus.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: IsTerminalStatus
    path: ZipPaymentStatus.cs
    startLine: 47
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nReturns true if the status provider is a known, final status - that is a status that should not change again.\n"
  example: []
  syntax:
    content: public static bool IsTerminalStatus(string status)
    parameters:
    - id: status
      type: System.String
      description: The status to check.
    return:
      type: System.Boolean
      description: True if the status is final, otherwise false.
    content.vb: Public Shared Function IsTerminalStatus(status As String) As Boolean
  overload: Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Yort.Zip.InStore
  commentId: N:Yort.Zip.InStore
  name: Yort.Zip.InStore
  nameWithType: Yort.Zip.InStore
  fullName: Yort.Zip.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Zip.InStore.ZipPaymentFlow.Auth
  commentId: F:Yort.Zip.InStore.ZipPaymentFlow.Auth
  isExternal: true
- uid: Yort.Zip.InStore.ZipPaymentFlow.Payment
  commentId: F:Yort.Zip.InStore.ZipPaymentFlow.Payment
  isExternal: true
- uid: Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus*
  commentId: Overload:Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus
  name: IsTerminalStatus
  nameWithType: ZipOrderStatus.IsTerminalStatus
  fullName: Yort.Zip.InStore.ZipOrderStatus.IsTerminalStatus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
