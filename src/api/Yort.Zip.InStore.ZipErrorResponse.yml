### YamlMime:ManagedReference
items:
- uid: Yort.Zip.InStore.ZipErrorResponse
  commentId: T:Yort.Zip.InStore.ZipErrorResponse
  id: ZipErrorResponse
  parent: Yort.Zip.InStore
  children:
  - Yort.Zip.InStore.ZipErrorResponse.#ctor
  - Yort.Zip.InStore.ZipErrorResponse.Detail
  - Yort.Zip.InStore.ZipErrorResponse.ErrorCode
  - Yort.Zip.InStore.ZipErrorResponse.IsValid
  - Yort.Zip.InStore.ZipErrorResponse.Message
  - Yort.Zip.InStore.ZipErrorResponse.ResponseCode
  - Yort.Zip.InStore.ZipErrorResponse.Title
  - Yort.Zip.InStore.ZipErrorResponse.TraceId
  - Yort.Zip.InStore.ZipErrorResponse.Type
  - Yort.Zip.InStore.ZipErrorResponse.ValidationErrors
  langs:
  - csharp
  - vb
  name: ZipErrorResponse
  nameWithType: ZipErrorResponse
  fullName: Yort.Zip.InStore.ZipErrorResponse
  type: Class
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ZipErrorResponse
    path: ZipError.cs
    startLine: 10
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nUsed to hold error messages and validation errors returned by the Zip API.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class ZipErrorResponse
    content.vb: >-
      <Serializable>

      Public Class ZipErrorResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Yort.Zip.InStore.ZipErrorResponse.#ctor
  commentId: M:Yort.Zip.InStore.ZipErrorResponse.#ctor
  id: '#ctor'
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: ZipErrorResponse()
  nameWithType: ZipErrorResponse.ZipErrorResponse()
  fullName: Yort.Zip.InStore.ZipErrorResponse.ZipErrorResponse()
  type: Constructor
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: .ctor
    path: ZipError.cs
    startLine: 16
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nDefault constructor.\n"
  example: []
  syntax:
    content: public ZipErrorResponse()
    content.vb: Public Sub New
  overload: Yort.Zip.InStore.ZipErrorResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.ResponseCode
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.ResponseCode
  id: ResponseCode
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: ResponseCode
  nameWithType: ZipErrorResponse.ResponseCode
  fullName: Yort.Zip.InStore.ZipErrorResponse.ResponseCode
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ResponseCode
    path: ZipError.cs
    startLine: 20
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nThe HTTP status code returned with the response that contained these errors.\n"
  example: []
  syntax:
    content: public int ResponseCode { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ResponseCode As Integer
  overload: Yort.Zip.InStore.ZipErrorResponse.ResponseCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.Message
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.Message
  id: Message
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ZipErrorResponse.Message
  fullName: Yort.Zip.InStore.ZipErrorResponse.Message
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Message
    path: ZipError.cs
    startLine: 24
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nSets or returns the top level error message associated with the response.\n"
  example: []
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: Yort.Zip.InStore.ZipErrorResponse.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.Title
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.Title
  id: Title
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ZipErrorResponse.Title
  fullName: Yort.Zip.InStore.ZipErrorResponse.Title
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Title
    path: ZipError.cs
    startLine: 29
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nSets or returns a generic description of the error message.\n"
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Yort.Zip.InStore.ZipErrorResponse.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.Detail
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.Detail
  id: Detail
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: Detail
  nameWithType: ZipErrorResponse.Detail
  fullName: Yort.Zip.InStore.ZipErrorResponse.Detail
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Detail
    path: ZipError.cs
    startLine: 34
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nSets or returns an error message specific to this instance of the error (as opposed to <xref href=\"Yort.Zip.InStore.ZipErrorResponse.Title\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: public string Detail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Detail As String
  overload: Yort.Zip.InStore.ZipErrorResponse.Detail*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.TraceId
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.TraceId
  id: TraceId
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: TraceId
  nameWithType: ZipErrorResponse.TraceId
  fullName: Yort.Zip.InStore.ZipErrorResponse.TraceId
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: TraceId
    path: ZipError.cs
    startLine: 39
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nSets or returns a unique value that can be reported to Zip to assist with locating log entries relating to this request.\n"
  example: []
  syntax:
    content: public string TraceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TraceId As String
  overload: Yort.Zip.InStore.ZipErrorResponse.TraceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.ErrorCode
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.ErrorCode
  id: ErrorCode
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: ErrorCode
  nameWithType: ZipErrorResponse.ErrorCode
  fullName: Yort.Zip.InStore.ZipErrorResponse.ErrorCode
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ErrorCode
    path: ZipError.cs
    startLine: 44
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nSets or returns a string containing an &apos;error code&apos; that can be used to programmatically take action on a specific error.\n"
  example: []
  syntax:
    content: public string ErrorCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ErrorCode As String
  overload: Yort.Zip.InStore.ZipErrorResponse.ErrorCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.ValidationErrors
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.ValidationErrors
  id: ValidationErrors
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: ValidationErrors
  nameWithType: ZipErrorResponse.ValidationErrors
  fullName: Yort.Zip.InStore.ZipErrorResponse.ValidationErrors
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: ValidationErrors
    path: ZipError.cs
    startLine: 49
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nAn array of errors, keyed by the name of the property that as an error and with the value being an array of related error messages.\n"
  example: []
  syntax:
    content: >-
      [JsonPropertyName("errors")]

      public IEnumerable<ZipValidationError> ValidationErrors { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Yort.Zip.InStore.ZipValidationError}
    content.vb: >-
      <JsonPropertyName("errors")>

      Public Property ValidationErrors As IEnumerable(Of ZipValidationError)
  overload: Yort.Zip.InStore.ZipErrorResponse.ValidationErrors*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: errors
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.IsValid
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.IsValid
  id: IsValid
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: ZipErrorResponse.IsValid
  fullName: Yort.Zip.InStore.ZipErrorResponse.IsValid
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: IsValid
    path: ZipError.cs
    startLine: 55
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nReturns a boolean indicatin whether or not the request was valid.\n"
  example: []
  syntax:
    content: public bool IsValid { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsValid As Boolean
  overload: Yort.Zip.InStore.ZipErrorResponse.IsValid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Yort.Zip.InStore.ZipErrorResponse.Type
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.Type
  id: Type
  parent: Yort.Zip.InStore.ZipErrorResponse
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ZipErrorResponse.Type
  fullName: Yort.Zip.InStore.ZipErrorResponse.Type
  type: Property
  source:
    remote:
      path: src/ZipError.cs
      branch: master
      repo: https://github.com/Yortw/Yort.Zip.InStore
    id: Type
    path: ZipError.cs
    startLine: 60
  assemblies:
  - Yort.Zip.InStore
  namespace: Yort.Zip.InStore
  summary: "\nA string containing a uri that defines the specific type of error that occurred.\n"
  example: []
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: Yort.Zip.InStore.ZipErrorResponse.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Yort.Zip.InStore
  commentId: N:Yort.Zip.InStore
  name: Yort.Zip.InStore
  nameWithType: Yort.Zip.InStore
  fullName: Yort.Zip.InStore
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Yort.Zip.InStore.ZipErrorResponse.#ctor*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.#ctor
  name: ZipErrorResponse
  nameWithType: ZipErrorResponse.ZipErrorResponse
  fullName: Yort.Zip.InStore.ZipErrorResponse.ZipErrorResponse
- uid: Yort.Zip.InStore.ZipErrorResponse.ResponseCode*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.ResponseCode
  name: ResponseCode
  nameWithType: ZipErrorResponse.ResponseCode
  fullName: Yort.Zip.InStore.ZipErrorResponse.ResponseCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Yort.Zip.InStore.ZipErrorResponse.Message*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.Message
  name: Message
  nameWithType: ZipErrorResponse.Message
  fullName: Yort.Zip.InStore.ZipErrorResponse.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Yort.Zip.InStore.ZipErrorResponse.Title*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.Title
  name: Title
  nameWithType: ZipErrorResponse.Title
  fullName: Yort.Zip.InStore.ZipErrorResponse.Title
- uid: Yort.Zip.InStore.ZipErrorResponse.Title
  commentId: P:Yort.Zip.InStore.ZipErrorResponse.Title
  isExternal: true
- uid: Yort.Zip.InStore.ZipErrorResponse.Detail*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.Detail
  name: Detail
  nameWithType: ZipErrorResponse.Detail
  fullName: Yort.Zip.InStore.ZipErrorResponse.Detail
- uid: Yort.Zip.InStore.ZipErrorResponse.TraceId*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.TraceId
  name: TraceId
  nameWithType: ZipErrorResponse.TraceId
  fullName: Yort.Zip.InStore.ZipErrorResponse.TraceId
- uid: Yort.Zip.InStore.ZipErrorResponse.ErrorCode*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.ErrorCode
  name: ErrorCode
  nameWithType: ZipErrorResponse.ErrorCode
  fullName: Yort.Zip.InStore.ZipErrorResponse.ErrorCode
- uid: Yort.Zip.InStore.ZipErrorResponse.ValidationErrors*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.ValidationErrors
  name: ValidationErrors
  nameWithType: ZipErrorResponse.ValidationErrors
  fullName: Yort.Zip.InStore.ZipErrorResponse.ValidationErrors
- uid: System.Collections.Generic.IEnumerable{Yort.Zip.InStore.ZipValidationError}
  commentId: T:System.Collections.Generic.IEnumerable{Yort.Zip.InStore.ZipValidationError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ZipValidationError>
  nameWithType: IEnumerable<ZipValidationError>
  fullName: System.Collections.Generic.IEnumerable<Yort.Zip.InStore.ZipValidationError>
  nameWithType.vb: IEnumerable(Of ZipValidationError)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Yort.Zip.InStore.ZipValidationError)
  name.vb: IEnumerable(Of ZipValidationError)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Yort.Zip.InStore.ZipValidationError
    name: ZipValidationError
    nameWithType: ZipValidationError
    fullName: Yort.Zip.InStore.ZipValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Yort.Zip.InStore.ZipValidationError
    name: ZipValidationError
    nameWithType: ZipValidationError
    fullName: Yort.Zip.InStore.ZipValidationError
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Yort.Zip.InStore.ZipErrorResponse.IsValid*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.IsValid
  name: IsValid
  nameWithType: ZipErrorResponse.IsValid
  fullName: Yort.Zip.InStore.ZipErrorResponse.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Yort.Zip.InStore.ZipErrorResponse.Type*
  commentId: Overload:Yort.Zip.InStore.ZipErrorResponse.Type
  name: Type
  nameWithType: ZipErrorResponse.Type
  fullName: Yort.Zip.InStore.ZipErrorResponse.Type
